.kvadratasDidelis {
  width: 300px;
  height: 300px;
  border: 2px solid black;
  background-color: rgb(50, 194, 146);
  margin-left: 200px;
  transform-origin: center;
}
.tranzicija {
  transition-property: all;
  transition-duration: 5s;
  transition-timing-function: ease;
  transition-delay: 0s;
  transition: width 5s linear 0s, background-color 10s linear 5s;
}
.scale {
  transform: scale(2, 0.5);
}
.rotate {
  transform: rotateZ(90deg);
}
.translate {
  transform: translate3d(100px, 200px, 50px);
}
.skew {
  transform: skew(50deg, 360deg) scale(2);
}
.tranzicija:hover {
  /* transform: scale(0.5) translate(100px, 50px) rotate(150deg);
  transform-origin: top left; */
  width: 800px;
  background-color: rgb(98, 98, 157);
}
.animacija {
  /* animation-duration: 10s;
  animation-timing-function: linear;
  animation-delay: 0s;
  animation-iteration-count: infinite;
  animation-direction: normal;
  animation-fill-mode: none;
  animation-play-state: running;
  animation-name: pirmaAnimacija; */


animation: 10s linear infinite pirmaAnimacija;
}
@keyframes pirmaAnimacija {
  0% {
    transform: translate(100px);
    background-color: aqua;
  }
  50% {
    
    background-color: rgb(255, 72, 0);
  }
  100%{
    width: 800px;
    background-color: blue;
  }
}
.transitionButton > input{
  margin: 0 auto;
  background-color: green;
  color: beige;
  width: 100px;
  height: 50px;
}
input:hover {
  color: green;
  background-color: beige;
  transition: 1s;
}
.taskContainer {
    width: 300px;
    height: 300px;
    border-radius: 50%;
    border: 2px double rgb(111, 113, 211);
    background-color: rgb(177, 204, 195);
    margin: 100px;
    transform-origin: bottom;
  }
  .animation1 {
    animation : 7s ease-in-out alternate infinite animation1;
}
@keyframes animation1 {
  0% {
    transform:  translate(0px, 150px);
  }
  100%{
    transform: translate(0px, 50px)
  }
  }
  .animation2 {
    margin-top: 500px;
  }
.animation2 {
  animation: linear 1s alternate infinite animation2;
}
@keyframes animation2 {
  0%{
    transform: skew(-20deg, 0deg);
  }
  50%{
    transform: skew(0deg, 0deg) scaleY(0.9);
  }
  100%{ 
    transform: skew(20deg, 0deg);

  }
}
 /* flex */
 .kvadratas {
  height: 100px;
  width: 100px;
  font-size: 24px;
  background-color: rgb(255, 246, 226);
  text-align: center;
  line-height: 100px;
  border: 2px solid red;
 }
 .flexContainer {
  border: 5px solid black;
  background-color:rgb(92, 171, 171);
  display: flex;
  height: 500px;
  /* flex-direction: row;
  flex-wrap: wrap; */ flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  /* align-content: center; */
  gap: 10px 30px;
 }
 .order1 {
  order: 1;
 }
 .order2 {
  order: 2;
 }
 .flexGrow1 {
  flex-grow: 1;
 }
 .flexGrow2 {
  flex-grow: 2;
 }
 .alignSelfItems {
  align-self: flex-start;
 }

